#!/usr/bin/env -S uv run --script
# /// script
# requires-python = ">=3.12"
# dependencies = [
#     "mutagen",
# ]
# ///

from pathlib import Path
import itertools, re
from mutagen.easyid3 import EasyID3

clean = lambda s: re.sub(r'\s+', ' ', s.translate({c: None for c in r'<>:"/\|?*'})).strip()

tracks = [
    {
        'albumartist': clean(EasyID3(p).get('albumartist', ['Unknown'])[0].split('/')[0]),
        'album': clean(EasyID3(p).get('album', [p.stem])[0]),
        'disc': int(EasyID3(p).get('discnumber', ['1'])[0].split('/')[0]),
        'track': int(EasyID3(p).get('tracknumber', ['1'])[0].split('/')[0]),
        'title': clean(EasyID3(p).get('title', [p.stem])[0]),
        'path': p
    }
    for p in Path().glob('*.mp3')
]
tracks.sort(key=lambda t: (t['albumartist'], t['album'], t['disc'], t['track']))

albums = [(k, list(g)) for k, g in itertools.groupby(tracks, key=lambda t: (t['albumartist'], t['album']))]

for (artist, album), group in albums:
    print(f'{artist} - {album}')
    multi_disc = max(t['disc'] for t in group) > 1
    width = len(str(max(t['track'] for t in group)))
    for t in group:
        prefix = f"{t['disc']}." if multi_disc else ''
        t['dest'] = Path(artist, album, f"{prefix}{t['track']:0{width}d} - {t['title']}.mp3")
        print(f'  {t["dest"]}')

if input('\nProceed? [y/N] ').strip().lower().startswith('y'):
    for _, group in albums:
        for t in group:
            t['dest'].parent.mkdir(parents=True, exist_ok=True)
            t['path'].rename(t['dest'])

# vim: set syntax=python:
